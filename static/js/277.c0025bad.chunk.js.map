{"version":3,"file":"static/js/277.c0025bad.chunk.js","mappings":"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","sources":["store/quotes.js","components/modal/index.js","components/table/rowForm/index.js","components/table/index.js","pages/quotes/index.js"],"sourcesContent":["import {makeAutoObservable} from \"mobx\";\n\nclass Quotes {\n  modalOpen = false;\n  loading = false;\n  error = null;\n  quotesObjPart1 = {};\n  quotesObjPart2 = {};\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fetchQuotes() {\n    const server_url = process.env.REACT_APP_SERVER_URL;\n    const url = server_url + \"/quotes\";\n\n    const splitQuotesHalf = (resQuotes) => {\n      const entries = Object.entries(resQuotes);\n      const indexToSplitBefore = Math.floor(entries.length / 2);\n\n      const ob1 = Object.fromEntries(entries.slice(0, indexToSplitBefore));\n      const ob2 = Object.fromEntries(entries.slice(indexToSplitBefore));\n\n      this.quotesObjPart1 = {...this.quotesObjPart1, ...ob1} || {};\n      this.quotesObjPart2 = {...this.quotesObjPart2, ...ob2} || {};\n    };\n\n    if (\n      !Object.keys(this.quotesObjPart1).length ||\n      !Object.keys(this.quotesObjPart2).length\n    ) {\n      this.loading = true;\n    }\n\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        splitQuotesHalf(res);\n        this.loading = false;\n        this.error = null;\n      })\n      .catch((err) => {\n        console.log(err);\n        this.error = err;\n      });\n  }\n}\n\nexport default new Quotes();\n","import React, {useEffect, useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\n\nconst CustomModal = ({\n  children, // Body element\n  title = \"\", // Header element or text\n  open = false, // Trigger to show/hide\n  onClose = () => {}, // Callback on close modal\n}) => {\n  const startZ = 1000;\n  const [index, setIndex] = useState();\n\n  const el = React.useMemo(() => document.createElement(\"div\"), []);\n  const modal = React.useMemo(() => ReactDOM.createPortal(getContent(), el));\n\n  useEffect(() => {\n    document.body.appendChild(el);\n    return () => {\n      document.body.removeChild(el);\n    };\n  }, [el]);\n\n  useEffect(() => {\n    if (open) {\n      setIndex(getCount() + startZ);\n      document.documentElement.style.overflow = \"hidden\";\n    } else {\n      const _count = document.querySelectorAll(\".customDrawer-open\").length;\n      if (!_count) {\n        document.documentElement.style.overflow = \"unset\";\n      }\n    }\n  }, [open]);\n\n  function getContent() {\n    return (\n      <div\n        style={{\n          visibility: open ? \"visible\" : \"hidden\",\n          zIndex: index,\n        }}\n      >\n        <div className=\"customModal-overlay\" onClick={handlerClose} />\n        <div className={getClass()}>\n          {title && (\n            <div className=\"customModal-header\">\n              {\n                <div\n                  className=\"customModal-header-cross\"\n                  onClick={handlerClose}\n                >\n                  &#215;\n                </div>\n              }\n              {title}\n            </div>\n          )}\n          <div className=\"customModal-body\">{children}</div>\n        </div>\n      </div>\n    );\n  }\n\n  function getClass() {\n    let classList = [\"customModal\"];\n    if (open) {\n      classList.push(\"customModal-open\");\n    }\n    return classList.join(\" \");\n  }\n\n  function getCount() {\n    return document.querySelectorAll(\".customModal-open\").length + 1;\n  }\n\n  function handlerClose() {\n    onClose();\n  }\n\n  return modal;\n};\n\nexport default CustomModal;\n","import React from \"react\";\nimport {usefulKeysConfig} from \"..\";\nimport \"./index.scss\";\n\nconst TableRowForm = ({rowData}) => {\n  delete rowData.id;\n\n  const title = rowData.pairName;\n  delete rowData.pairName;\n\n  return (\n    <div className=\"tableRowForm\">\n      <div className=\"tableRowForm-title\">{title}</div>\n      <table>\n        <tbody>\n          {Object.keys(rowData).map((x, i) => (\n            <TableRow key={i} paramKey={x} rowData={rowData} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst TableRow = ({paramKey, rowData}) => {\n  // Ограничение длины числа до 10 символов\n  const rawNum = parseFloat(rowData[paramKey]);\n  const normalizedNum = rawNum\n    .toFixed(12)\n    .replace(/\\.?0+$/, \"\")\n    .slice(0, 12);\n\n  return (\n    <tr className=\"tableRowForm-row\">\n      <td>{usefulKeysConfig[paramKey]?.label || paramKey}</td>\n      <td style={{paddingLeft: \"1rem\"}}>{normalizedNum}</td>\n    </tr>\n  );\n};\n\nexport default TableRowForm;\n","import React, {useEffect, useRef, useState} from \"react\";\nimport quotes from \"../../store/quotes\";\nimport CustomModal from \"../modal\";\nimport Waiter from \"../waiter\";\nimport TableRowForm from \"./rowForm\";\nimport \"./index.scss\";\n\nexport const usefulKeysConfig = {\n  last: {label: \"Цена\", align: \"left\"},\n  highestBid: {label: \"Наивысшее\", align: \"right\"},\n  percentChange: {label: \"24ч Изменениe\", align: \"right\"},\n};\n\nconst TableWidget = ({data}) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const currencyPairNames = Object.keys(data);\n\n  const handleOpenModal = (row) => {\n    quotes.modalOpen = true;\n    setSelectedRow(row);\n  };\n  const handleCloseModal = () => {\n    quotes.modalOpen = false;\n    setSelectedRow(null);\n  };\n\n  return (\n    <>\n      <table className=\"tableWidget\">\n        <thead className=\"tableWidget-head\">\n          <tr>\n            <th style={{textAlign: \"left\"}}>Название</th>\n            {Object.keys(usefulKeysConfig).map((x, i) => {\n              const keyConf = usefulKeysConfig[x];\n              return (\n                <th key={i} style={{textAlign: keyConf.align}}>\n                  {keyConf.label}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n\n        {data ? (\n          <tbody className=\"tableWidget-body\">\n            {currencyPairNames.map((pairName, i) => {\n              const rowData = data[pairName];\n              return (\n                <TableRow\n                  key={i}\n                  pairName={pairName}\n                  rowData={rowData}\n                  onClick={() => handleOpenModal({...rowData, pairName})}\n                />\n              );\n            })}\n          </tbody>\n        ) : (\n          <Waiter />\n        )}\n      </table>\n\n      <CustomModal open={quotes.modalOpen} onClose={handleCloseModal}>\n        {quotes.modalOpen && <TableRowForm rowData={selectedRow} />}\n      </CustomModal>\n    </>\n  );\n};\n\nconst TableRow = ({pairName, rowData, onClick}) => {\n  const prevData = useRef(rowData || {});\n\n  useEffect(() => {\n    prevData.current = rowData;\n  }, [rowData]);\n\n  return (\n    <tr onClick={onClick}>\n      <td>{pairName.replace(\"_\", \" / \")}</td>\n      {Object.keys(usefulKeysConfig).map((dataKey, i) => {\n        const keyConf = usefulKeysConfig[dataKey];\n\n        // Ограничение длины числа до 10 символов\n        const rawNum = parseFloat(rowData[dataKey]);\n        const normalizedNum = rawNum\n          .toFixed(12)\n          .replace(/\\.?0+$/, \"\")\n          .slice(0, 12);\n\n        // Отслеживание динамики изменений значения\n        const prev = Number(prevData.current?.[dataKey]);\n        const cur = rawNum;\n        const changedUp = cur > prev;\n        const changeDown = cur < prev;\n\n        return (\n          <td\n            key={i}\n            style={{\n              textAlign: keyConf.align,\n              background: changedUp\n                ? \"hsl(120deg, 100%, 25%, 0.1)\"\n                : changeDown\n                ? \"hsl(0deg, 100%, 50%, 0.1)\"\n                : null,\n            }}\n          >\n            {normalizedNum}\n          </td>\n        );\n      })}\n    </tr>\n  );\n};\n\nexport default TableWidget;\n","import {observer} from \"mobx-react-lite\";\nimport React, {useEffect, useState} from \"react\";\nimport {Link, useParams} from \"react-router-dom\";\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport TableWidget from \"../../components/table\";\nimport quotes from \"../../store/quotes\";\n\nimport \"./index.scss\";\n\nconst QuotesPage = observer(() => {\n  const {id} = useParams();\n  const [tabNum, setTabNum] = useState(+id || 1);\n\n  useEffect(() => {\n    quotes.fetchQuotes();\n  }, []);\n\n  useEffect(() => {\n    const updateInterval = setInterval(() => quotes.fetchQuotes(), 5000);\n    if (quotes.modalOpen) {\n      clearInterval(updateInterval);\n    }\n    return () => clearInterval(updateInterval);\n  }, [quotes.modalOpen]);\n\n  return (\n    <div className=\"quotesPage\">\n      <div className=\"quotesPage-header\">\n        <Link className=\"quotesPage-backBtn\" to=\"/\">\n          О приложении\n        </Link>\n        <div className=\"quotesPage-animIndicator\" to=\"/\">\n          {quotes.error ? (\n            \"Ошибка\"\n          ) : quotes.loading ? (\n            <ClockLoader size={30} />\n          ) : null}\n        </div>\n      </div>\n      <div className=\"quotesPage-tabSelector\">\n        <div\n          className={`quotesPage-tabSelection ${\n            tabNum == 1 ? \"quotesPage-tabSelection-active\" : \"\"\n          }`}\n          onClick={() => setTabNum(1)}\n        >\n          Котировки 1\n        </div>\n        <div\n          className={`quotesPage-tabSelection ${\n            tabNum == 2 ? \"quotesPage-tabSelection-active\" : \"\"\n          }`}\n          onClick={() => setTabNum(2)}\n        >\n          Котировки 2\n        </div>\n      </div>\n\n      <div className=\"quotesPage-tab\">\n        {tabNum === 1 ? (\n          <TableWidget data={quotes.quotesObjPart1} />\n        ) : (\n          <TableWidget data={quotes.quotesObjPart2} />\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default QuotesPage;\n"],"names":["Quotes","_classCallCheck","modalOpen","loading","error","quotesObjPart1","quotesObjPart2","makeAutoObservable","this","_createClass","key","value","_this","url","process","REACT_APP_SERVER_URL","Object","keys","length","fetch","then","res","json","resQuotes","entries","indexToSplitBefore","Math","floor","ob1","fromEntries","slice","ob2","_objectSpread","splitQuotesHalf","catch","err","console","log","_ref","children","_ref$title","title","_ref$open","open","_ref$onClose","onClose","_useState","useState","_useState2","_slicedToArray","index","setIndex","el","React","document","createElement","modal","ReactDOM","_jsxs","style","visibility","zIndex","_jsx","className","onClick","handlerClose","getClass","classList","push","join","useEffect","body","appendChild","removeChild","querySelectorAll","documentElement","overflow","TableRow","_ref2","_usefulKeysConfig$par","paramKey","rowData","normalizedNum","parseFloat","toFixed","replace","usefulKeysConfig","label","paddingLeft","id","pairName","map","x","i","last","align","highestBid","percentChange","prevData","useRef","current","dataKey","_prevData$current","keyConf","rawNum","prev","Number","changedUp","changeDown","textAlign","background","data","selectedRow","setSelectedRow","currencyPairNames","_Fragment","row","quotes","Waiter","CustomModal","TableRowForm","observer","useParams","tabNum","setTabNum","fetchQuotes","updateInterval","setInterval","clearInterval","Link","to","ClockLoader","size","concat","TableWidget"],"sourceRoot":""}